#include<bits/stdc++.h>
using namespace std;
//need a tree Node which have data and left pointer to store the address of left child
//right pointer to store the right child
 
struct TreeNode{
    int data;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int val){
        data = val;
        left = right = NULL;
    }
};
 void Inorder(Node *root,vector<int>&v){
        if(root!=NULL){
            v.push_back(root->data);
            Inorder(root->left,v);
            Inorder(root->right,v);
        }
    }
  void Preorder(Node *root,vector<int>&v){
        if(root!=NULL){
            v.push_back(root->data);
            Preorder(root->left,v);
            Preorder(root->right,v);
        }
    }
   void Postorder(Node *root,vector<int>&v){
        if(root!=NULL){
            v.push_back(root->data);
            Postorder(root->left,v);
            Postorder(root->right,v);
        }
    }
 
int main(){
    TreeNode *root = new TreeNode(10);
    TreeNode *c1 = new TreeNode(20);
    TreeNode *c2 = new TreeNode(30);
    
    root->left = c1;
    root->right = c2;
    TreeNode *c11 = new TreeNode(40);
    TreeNode *c12 = new TreeNode(50);
    c1->left = c11;
    c1->right = c12;
    Postorder(root);
}
